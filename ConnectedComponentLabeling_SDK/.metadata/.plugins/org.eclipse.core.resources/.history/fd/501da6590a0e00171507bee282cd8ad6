#include <xparameters.h>
#include "xCCLabel.h"
#include "xaxidma.h"
#include "platform.h"
#include "AxiTimerHelper.h"
#include "Image.h"
#include "CentroiderHW.h"
#include "Algorithm.h"
#include "Database.h"
#include "StarPatternDatabase.h"

#define FOV 256
#define TOLERANCE 4

int main() {
	init_platform();

	//Initialize
	init_core();
	XCclabel_EnableAutoRestart(&cCLabel);

	//Timer
	AxiTimerHelper timer;

	/********************************************** CC Labeling HW ****************************************************************/
	//Set parameters
	XCclabel_Set_imgHeight(&cCLabel, IMG_HEIGHT);
	XCclabel_Set_imgWidth(&cCLabel, IMG_WIDTH);

	//Flush the cache of the buffers
	Xil_DCacheFlushRange((u32)inputIMG, IMG_HEIGHT * IMG_WIDTH * sizeof(int));

	//Send data to IP core
	XAxiDma_SimpleTransfer(&axiDMA, (u32)inputIMG, IMG_HEIGHT * IMG_WIDTH * sizeof(int), XAXIDMA_DMA_TO_DEVICE);

	//Start IP core
	XCclabel_Start(&cCLabel);

	// Wait until it's done
	while(!XCclabel_IsDone(&cCLabel));

	//Output
	u32 centroidCountHW = XCclabel_Get_return(&cCLabel);

	/********************************************** Algorithm ****************************************************************/
	std::vector<Star> starList = chooseStarRef(XHW, YHW, centroidCountHW, IMG_HEIGHT, IMG_WIDTH);
	StarPattern sPattern = getStarPattern(starList,FOV);

	/********************************************** Matching ****************************************************************/
	//Build Tree
	NodePtr root = buildTree(database);
	int res1 = searchLin(database, TORLERANCE, sPattern.N, sPattern.d1, sPattern.d2, sPattern.d3);
	int res2 = searchTolerance(root, TORLERANCE, sPattern.N, sPattern.d1, sPattern.d2, sPattern.d3);
	xil_printf(" %d %d\r\n", res1, res2);

	xil_printf("Dit con me may\r\n");

	cleanup_platform();
	return 0;
}
