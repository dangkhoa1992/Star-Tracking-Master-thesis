// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CCLabel_firstPass (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Image_r_Addr_A,
        Image_r_EN_A,
        Image_r_WEN_A,
        Image_r_Din_A,
        Image_r_Dout_A,
        lbImage_address0,
        lbImage_ce0,
        lbImage_we0,
        lbImage_d0,
        lbImage_q0,
        lbImage_address1,
        lbImage_ce1,
        lbImage_we1,
        lbImage_d1,
        lbImage_q1,
        set_address0,
        set_ce0,
        set_we0,
        set_d0,
        set_q0,
        status_address0,
        status_ce0,
        status_we0,
        status_d0,
        totalIntensity_address0,
        totalIntensity_ce0,
        totalIntensity_we0,
        totalIntensity_d0,
        totalIntensity_q0,
        x_r_address0,
        x_r_ce0,
        x_r_we0,
        x_r_d0,
        x_r_q0,
        y_r_address0,
        y_r_ce0,
        y_r_we0,
        y_r_d0,
        y_r_q0,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 17'b1;
parameter    ap_ST_st2_fsm_1 = 17'b10;
parameter    ap_ST_st3_fsm_2 = 17'b100;
parameter    ap_ST_st4_fsm_3 = 17'b1000;
parameter    ap_ST_st5_fsm_4 = 17'b10000;
parameter    ap_ST_st6_fsm_5 = 17'b100000;
parameter    ap_ST_st7_fsm_6 = 17'b1000000;
parameter    ap_ST_st8_fsm_7 = 17'b10000000;
parameter    ap_ST_st9_fsm_8 = 17'b100000000;
parameter    ap_ST_st10_fsm_9 = 17'b1000000000;
parameter    ap_ST_st11_fsm_10 = 17'b10000000000;
parameter    ap_ST_st12_fsm_11 = 17'b100000000000;
parameter    ap_ST_st13_fsm_12 = 17'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 17'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 17'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 17'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 17'b10000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv7_40 = 7'b1000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_3E7 = 32'b1111100111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] Image_r_Addr_A;
output   Image_r_EN_A;
output  [3:0] Image_r_WEN_A;
output  [31:0] Image_r_Din_A;
input  [31:0] Image_r_Dout_A;
output  [5:0] lbImage_address0;
output   lbImage_ce0;
output   lbImage_we0;
output  [31:0] lbImage_d0;
input  [31:0] lbImage_q0;
output  [5:0] lbImage_address1;
output   lbImage_ce1;
output   lbImage_we1;
output  [31:0] lbImage_d1;
input  [31:0] lbImage_q1;
output  [5:0] set_address0;
output   set_ce0;
output   set_we0;
output  [31:0] set_d0;
input  [31:0] set_q0;
output  [5:0] status_address0;
output   status_ce0;
output   status_we0;
output  [0:0] status_d0;
output  [5:0] totalIntensity_address0;
output   totalIntensity_ce0;
output   totalIntensity_we0;
output  [31:0] totalIntensity_d0;
input  [31:0] totalIntensity_q0;
output  [5:0] x_r_address0;
output   x_r_ce0;
output   x_r_we0;
output  [31:0] x_r_d0;
input  [31:0] x_r_q0;
output  [5:0] y_r_address0;
output   y_r_ce0;
output   y_r_we0;
output  [31:0] y_r_d0;
input  [31:0] y_r_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Image_r_EN_A;
reg[5:0] lbImage_address0;
reg lbImage_ce0;
reg lbImage_we0;
reg[5:0] lbImage_address1;
reg lbImage_ce1;
reg lbImage_we1;
reg[5:0] set_address0;
reg set_ce0;
reg set_we0;
reg[31:0] set_d0;
reg status_ce0;
reg status_we0;
reg[5:0] totalIntensity_address0;
reg totalIntensity_ce0;
reg totalIntensity_we0;
reg[31:0] totalIntensity_d0;
reg[5:0] x_r_address0;
reg x_r_ce0;
reg x_r_we0;
reg[31:0] x_r_d0;
reg[5:0] y_r_address0;
reg y_r_ce0;
reg y_r_we0;
reg[31:0] y_r_d0;
(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm = 17'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_35;
reg  signed [31:0] reg_317;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_107;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_114;
wire   [6:0] indvar_flatten_next_fu_340_p2;
reg   [6:0] indvar_flatten_next_reg_656;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_124;
wire   [3:0] j2_mid2_fu_352_p3;
reg   [3:0] j2_mid2_reg_661;
wire   [0:0] exitcond_flatten_fu_334_p2;
wire   [3:0] i1_mid2_fu_366_p3;
reg   [3:0] i1_mid2_reg_670;
wire   [5:0] tmp_fu_378_p3;
reg   [5:0] tmp_reg_677;
wire   [63:0] tmp_s_fu_396_p1;
reg   [63:0] tmp_s_reg_682;
reg   [5:0] lbImage_addr_reg_688;
wire   [31:0] i1_cast9_fu_401_p1;
reg   [31:0] i1_cast9_reg_694;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_147;
wire   [0:0] tmp_7_fu_407_p2;
reg   [0:0] tmp_7_reg_699;
wire   [31:0] j2_cast7_fu_412_p1;
reg   [31:0] j2_cast7_reg_704;
wire   [0:0] grp_fu_299_p2;
reg   [0:0] tmp_1_reg_709;
wire   [31:0] prevAbove_fu_468_p3;
reg   [31:0] prevAbove_reg_723;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_168;
wire   [31:0] prevLeft_fu_493_p3;
reg   [31:0] prevLeft_reg_732;
wire   [0:0] or_cond_fu_511_p2;
reg   [0:0] or_cond_reg_741;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_179;
wire   [31:0] temp_4_fu_521_p3;
reg   [31:0] temp_4_reg_745;
wire   [31:0] max_fu_531_p3;
reg   [31:0] max_reg_754;
wire   [0:0] tmp_20_fu_537_p2;
reg   [0:0] tmp_20_reg_759;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_200;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_208;
wire   [31:0] Image_addr_1_gep_fu_145_p3;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_217;
reg   [5:0] totalIntensity_addr_1_reg_786;
reg   [5:0] x_addr_1_reg_791;
reg   [5:0] y_addr_1_reg_796;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_232;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_240;
wire  signed [31:0] grp_fu_305_p2;
reg  signed [31:0] tmp_26_reg_814;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_249;
wire  signed [31:0] grp_fu_311_p2;
reg  signed [31:0] tmp_28_reg_819;
wire   [3:0] j_fu_598_p2;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_260;
reg   [6:0] indvar_flatten_reg_240;
reg   [3:0] i1_reg_251;
reg   [3:0] j2_reg_262;
reg   [31:0] temp_i_reg_273;
wire   [0:0] tmp_6_i_fu_548_p2;
reg   [31:0] temp_i4_reg_284;
wire   [0:0] tmp_6_i8_fu_573_p2;
wire   [63:0] tmp_4_fu_434_p1;
wire   [63:0] tmp_11_fu_458_p1;
wire  signed [63:0] tmp_i_fu_543_p1;
wire   [63:0] tmp_23_fu_554_p1;
wire   [63:0] tmp_22_fu_558_p1;
wire   [63:0] tmp_24_fu_562_p1;
wire  signed [63:0] tmp_i5_fu_568_p1;
wire   [63:0] tmp_15_fu_614_p1;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_309;
reg   [31:0] label_1_fu_66;
wire   [31:0] label_fu_606_p2;
reg   [31:0] setCount_1_fu_70;
wire   [31:0] setCount_fu_623_p2;
reg   [31:0] Image_r_Addr_A_orig;
wire  signed [31:0] tmp_25_fu_579_p2;
wire  signed [31:0] tmp_27_fu_586_p2;
wire  signed [31:0] tmp_29_fu_592_p2;
wire  signed [31:0] grp_fu_305_p0;
wire   [3:0] grp_fu_305_p1;
wire  signed [31:0] grp_fu_311_p0;
wire   [3:0] grp_fu_311_p1;
wire   [0:0] exitcond4_fu_346_p2;
wire   [3:0] i2_fu_360_p2;
wire   [2:0] tmp_30_fu_374_p1;
wire   [5:0] j2_cast6_fu_386_p1;
wire   [5:0] tmp_9_fu_390_p2;
wire   [3:0] tmp4_fu_415_p2;
wire  signed [6:0] tmp4_cast_fu_420_p1;
wire   [6:0] tmp_cast_fu_404_p1;
wire  signed [6:0] tmp_3_fu_424_p2;
wire  signed [31:0] tmp_3_cast_fu_430_p1;
wire   [3:0] tmp5_fu_439_p2;
wire  signed [6:0] tmp5_cast_fu_444_p1;
wire  signed [6:0] tmp_10_fu_448_p2;
wire  signed [31:0] tmp_10_cast_fu_454_p1;
wire   [0:0] sel_tmp_fu_463_p2;
wire   [0:0] tmp_6_fu_476_p2;
wire   [0:0] tmp_12_fu_481_p2;
wire   [0:0] sel_tmp2_fu_487_p2;
wire   [0:0] tmp_13_fu_501_p2;
wire   [0:0] tmp_14_fu_506_p2;
wire   [0:0] tmp_18_fu_517_p2;
wire   [0:0] tmp_19_fu_527_p2;
wire  signed [31:0] tmp_25_fu_579_p1;
wire    grp_fu_305_ce;
wire    grp_fu_311_ce;
reg   [16:0] ap_NS_fsm;


CCLabel_mul_32s_4ns_32_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
CCLabel_mul_32s_4ns_32_3_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_305_p0 ),
    .din1( grp_fu_305_p1 ),
    .ce( grp_fu_305_ce ),
    .dout( grp_fu_305_p2 )
);

CCLabel_mul_32s_4ns_32_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
CCLabel_mul_32s_4ns_32_3_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_311_p0 ),
    .din1( grp_fu_311_p1 ),
    .ce( grp_fu_311_ce ),
    .dout( grp_fu_311_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        i1_reg_251 <= i1_mid2_reg_670;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i1_reg_251 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        indvar_flatten_reg_240 <= indvar_flatten_next_reg_656;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        indvar_flatten_reg_240 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        j2_reg_262 <= j_fu_598_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        j2_reg_262 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        label_1_fu_66 <= label_fu_606_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        label_1_fu_66 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        setCount_1_fu_70 <= setCount_fu_623_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        setCount_1_fu_70 <= ap_const_lv32_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == or_cond_fu_511_p2) & ~(ap_const_lv1_0 == tmp_20_fu_537_p2))) begin
        temp_i4_reg_284 <= temp_4_fu_521_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & (ap_const_lv1_0 == tmp_6_i8_fu_573_p2))) begin
        temp_i4_reg_284 <= set_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == or_cond_fu_511_p2) & (ap_const_lv1_0 == tmp_20_fu_537_p2))) begin
        temp_i_reg_273 <= temp_4_fu_521_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_6_i_fu_548_p2))) begin
        temp_i_reg_273 <= set_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i1_cast9_reg_694[0] <= i1_cast9_fu_401_p1[0];
i1_cast9_reg_694[1] <= i1_cast9_fu_401_p1[1];
i1_cast9_reg_694[2] <= i1_cast9_fu_401_p1[2];
i1_cast9_reg_694[3] <= i1_cast9_fu_401_p1[3];
        j2_cast7_reg_704[0] <= j2_cast7_fu_412_p1[0];
j2_cast7_reg_704[1] <= j2_cast7_fu_412_p1[1];
j2_cast7_reg_704[2] <= j2_cast7_fu_412_p1[2];
j2_cast7_reg_704[3] <= j2_cast7_fu_412_p1[3];
        tmp_1_reg_709 <= grp_fu_299_p2;
        tmp_7_reg_699 <= tmp_7_fu_407_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_flatten_fu_334_p2 == ap_const_lv1_0))) begin
        i1_mid2_reg_670 <= i1_mid2_fu_366_p3;
        j2_mid2_reg_661 <= j2_mid2_fu_352_p3;
        lbImage_addr_reg_688 <= tmp_s_fu_396_p1;
        tmp_reg_677[3] <= tmp_fu_378_p3[3];
tmp_reg_677[4] <= tmp_fu_378_p3[4];
tmp_reg_677[5] <= tmp_fu_378_p3[5];
        tmp_s_reg_682[0] <= tmp_s_fu_396_p1[0];
tmp_s_reg_682[1] <= tmp_s_fu_396_p1[1];
tmp_s_reg_682[2] <= tmp_s_fu_396_p1[2];
tmp_s_reg_682[3] <= tmp_s_fu_396_p1[3];
tmp_s_reg_682[4] <= tmp_s_fu_396_p1[4];
tmp_s_reg_682[5] <= tmp_s_fu_396_p1[5];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        indvar_flatten_next_reg_656 <= indvar_flatten_next_fu_340_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == or_cond_fu_511_p2))) begin
        max_reg_754 <= max_fu_531_p3;
        temp_4_reg_745 <= temp_4_fu_521_p3;
        tmp_20_reg_759 <= tmp_20_fu_537_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        or_cond_reg_741 <= or_cond_fu_511_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        prevAbove_reg_723 <= prevAbove_fu_468_p3;
        prevLeft_reg_732 <= prevLeft_fu_493_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        reg_317 <= Image_r_Dout_A;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        tmp_26_reg_814 <= grp_fu_305_p2;
        tmp_28_reg_819 <= grp_fu_311_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        totalIntensity_addr_1_reg_786 <= tmp_24_fu_562_p1;
        x_addr_1_reg_791 <= tmp_24_fu_562_p1;
        y_addr_1_reg_796 <= tmp_24_fu_562_p1;
    end
end

/// Image_r_Addr_A_orig assign process. ///
always @ (tmp_s_reg_682 or ap_sig_cseq_ST_st5_fsm_4 or Image_addr_1_gep_fu_145_p3 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        Image_r_Addr_A_orig = Image_addr_1_gep_fu_145_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        Image_r_Addr_A_orig = tmp_s_reg_682;
    end else begin
        Image_r_Addr_A_orig = 'bx;
    end
end

/// Image_r_EN_A assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        Image_r_EN_A = ap_const_logic_1;
    end else begin
        Image_r_EN_A = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or exitcond_flatten_fu_334_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_flatten_fu_334_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond_flatten_fu_334_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_flatten_fu_334_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_240)
begin
    if (ap_sig_bdd_240) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_107)
begin
    if (ap_sig_bdd_107) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_249)
begin
    if (ap_sig_bdd_249) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_260)
begin
    if (ap_sig_bdd_260) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_114)
begin
    if (ap_sig_bdd_114) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_309)
begin
    if (ap_sig_bdd_309) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_35)
begin
    if (ap_sig_bdd_35) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_124)
begin
    if (ap_sig_bdd_124) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_147)
begin
    if (ap_sig_bdd_147) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_168)
begin
    if (ap_sig_bdd_168) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_179)
begin
    if (ap_sig_bdd_179) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_200)
begin
    if (ap_sig_bdd_200) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_208)
begin
    if (ap_sig_bdd_208) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_217)
begin
    if (ap_sig_bdd_217) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_232)
begin
    if (ap_sig_bdd_232) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// lbImage_address0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_s_fu_396_p1 or lbImage_addr_reg_688 or ap_sig_cseq_ST_st3_fsm_2 or tmp_4_fu_434_p1 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        lbImage_address0 = lbImage_addr_reg_688;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        lbImage_address0 = tmp_4_fu_434_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        lbImage_address0 = tmp_s_fu_396_p1;
    end else begin
        lbImage_address0 = 'bx;
    end
end

/// lbImage_address1 assign process. ///
always @ (lbImage_addr_reg_688 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st8_fsm_7 or tmp_11_fu_458_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        lbImage_address1 = lbImage_addr_reg_688;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        lbImage_address1 = tmp_11_fu_458_p1;
    end else begin
        lbImage_address1 = 'bx;
    end
end

/// lbImage_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        lbImage_ce0 = ap_const_logic_1;
    end else begin
        lbImage_ce0 = ap_const_logic_0;
    end
end

/// lbImage_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        lbImage_ce1 = ap_const_logic_1;
    end else begin
        lbImage_ce1 = ap_const_logic_0;
    end
end

/// lbImage_we0 assign process. ///
always @ (ap_sig_cseq_ST_st17_fsm_16)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        lbImage_we0 = ap_const_logic_1;
    end else begin
        lbImage_we0 = ap_const_logic_0;
    end
end

/// lbImage_we1 assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        lbImage_we1 = ap_const_logic_1;
    end else begin
        lbImage_we1 = ap_const_logic_0;
    end
end

/// set_address0 assign process. ///
always @ (tmp_20_reg_759 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8 or tmp_i_fu_543_p1 or tmp_23_fu_554_p1 or tmp_22_fu_558_p1 or tmp_i5_fu_568_p1 or tmp_15_fu_614_p1 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        set_address0 = tmp_15_fu_614_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_lv1_0 == tmp_20_reg_759))) begin
        set_address0 = tmp_22_fu_558_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (ap_const_lv1_0 == tmp_20_reg_759))) begin
        set_address0 = tmp_23_fu_554_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        set_address0 = tmp_i5_fu_568_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        set_address0 = tmp_i_fu_543_p1;
    end else begin
        set_address0 = 'bx;
    end
end

/// set_ce0 assign process. ///
always @ (tmp_20_reg_759 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (ap_const_lv1_0 == tmp_20_reg_759)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_lv1_0 == tmp_20_reg_759)) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        set_ce0 = ap_const_logic_1;
    end else begin
        set_ce0 = ap_const_logic_0;
    end
end

/// set_d0 assign process. ///
always @ (tmp_20_reg_759 or ap_sig_cseq_ST_st8_fsm_7 or temp_i_reg_273 or temp_i4_reg_284 or ap_sig_cseq_ST_st17_fsm_16 or label_fu_606_p2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        set_d0 = label_fu_606_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_lv1_0 == tmp_20_reg_759))) begin
        set_d0 = temp_i4_reg_284;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (ap_const_lv1_0 == tmp_20_reg_759))) begin
        set_d0 = temp_i_reg_273;
    end else begin
        set_d0 = 'bx;
    end
end

/// set_we0 assign process. ///
always @ (tmp_20_reg_759 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & (ap_const_lv1_0 == tmp_20_reg_759)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_lv1_0 == tmp_20_reg_759)) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        set_we0 = ap_const_logic_1;
    end else begin
        set_we0 = ap_const_logic_0;
    end
end

/// status_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st17_fsm_16)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        status_ce0 = ap_const_logic_1;
    end else begin
        status_ce0 = ap_const_logic_0;
    end
end

/// status_we0 assign process. ///
always @ (ap_sig_cseq_ST_st17_fsm_16)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        status_we0 = ap_const_logic_1;
    end else begin
        status_we0 = ap_const_logic_0;
    end
end

/// totalIntensity_address0 assign process. ///
always @ (ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st8_fsm_7 or totalIntensity_addr_1_reg_786 or tmp_24_fu_562_p1 or tmp_15_fu_614_p1 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        totalIntensity_address0 = tmp_15_fu_614_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        totalIntensity_address0 = totalIntensity_addr_1_reg_786;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        totalIntensity_address0 = tmp_24_fu_562_p1;
    end else begin
        totalIntensity_address0 = 'bx;
    end
end

/// totalIntensity_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        totalIntensity_ce0 = ap_const_logic_1;
    end else begin
        totalIntensity_ce0 = ap_const_logic_0;
    end
end

/// totalIntensity_d0 assign process. ///
always @ (reg_317 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st17_fsm_16 or tmp_25_fu_579_p2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        totalIntensity_d0 = reg_317;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        totalIntensity_d0 = tmp_25_fu_579_p2;
    end else begin
        totalIntensity_d0 = 'bx;
    end
end

/// totalIntensity_we0 assign process. ///
always @ (ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        totalIntensity_we0 = ap_const_logic_1;
    end else begin
        totalIntensity_we0 = ap_const_logic_0;
    end
end

/// x_r_address0 assign process. ///
always @ (x_addr_1_reg_791 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st14_fsm_13 or tmp_15_fu_614_p1 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        x_r_address0 = tmp_15_fu_614_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        x_r_address0 = x_addr_1_reg_791;
    end else begin
        x_r_address0 = 'bx;
    end
end

/// x_r_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        x_r_ce0 = ap_const_logic_1;
    end else begin
        x_r_ce0 = ap_const_logic_0;
    end
end

/// x_r_d0 assign process. ///
always @ (grp_fu_305_p2 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st17_fsm_16 or tmp_27_fu_586_p2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        x_r_d0 = grp_fu_305_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        x_r_d0 = tmp_27_fu_586_p2;
    end else begin
        x_r_d0 = 'bx;
    end
end

/// x_r_we0 assign process. ///
always @ (tmp_1_reg_709 or or_cond_reg_741 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) & (ap_const_lv1_0 == tmp_1_reg_709) & (ap_const_lv1_0 == or_cond_reg_741)))) begin
        x_r_we0 = ap_const_logic_1;
    end else begin
        x_r_we0 = ap_const_logic_0;
    end
end

/// y_r_address0 assign process. ///
always @ (y_addr_1_reg_796 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st14_fsm_13 or tmp_15_fu_614_p1 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        y_r_address0 = tmp_15_fu_614_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        y_r_address0 = y_addr_1_reg_796;
    end else begin
        y_r_address0 = 'bx;
    end
end

/// y_r_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        y_r_ce0 = ap_const_logic_1;
    end else begin
        y_r_ce0 = ap_const_logic_0;
    end
end

/// y_r_d0 assign process. ///
always @ (grp_fu_311_p2 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st17_fsm_16 or tmp_29_fu_592_p2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        y_r_d0 = grp_fu_311_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        y_r_d0 = tmp_29_fu_592_p2;
    end else begin
        y_r_d0 = 'bx;
    end
end

/// y_r_we0 assign process. ///
always @ (tmp_1_reg_709 or or_cond_reg_741 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st17_fsm_16)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) & (ap_const_lv1_0 == tmp_1_reg_709) & (ap_const_lv1_0 == or_cond_reg_741)))) begin
        y_r_we0 = ap_const_logic_1;
    end else begin
        y_r_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond_flatten_fu_334_p2 or grp_fu_299_p2 or or_cond_fu_511_p2 or tmp_20_fu_537_p2 or tmp_6_i_fu_548_p2 or tmp_6_i8_fu_573_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond_flatten_fu_334_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_lv1_0 == grp_fu_299_p2)) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            if (((ap_const_lv1_0 == or_cond_fu_511_p2) & ~(ap_const_lv1_0 == tmp_20_fu_537_p2))) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else if (((ap_const_lv1_0 == or_cond_fu_511_p2) & (ap_const_lv1_0 == tmp_20_fu_537_p2))) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            if ((ap_const_lv1_0 == tmp_6_i_fu_548_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            if ((ap_const_lv1_0 == tmp_6_i8_fu_573_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Image_addr_1_gep_fu_145_p3 = tmp_s_reg_682;
assign Image_r_Addr_A = Image_r_Addr_A_orig << ap_const_lv32_2;
assign Image_r_Din_A = ap_const_lv32_0;
assign Image_r_WEN_A = ap_const_lv4_0;
assign ap_return = setCount_1_fu_70;

/// ap_sig_bdd_107 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_107 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_114 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_114 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_124 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_124 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_147 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_147 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_168 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_168 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_179 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_179 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_200 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_200 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_208 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_208 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_217 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_217 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_232 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_232 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_240 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_240 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_249 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_249 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_260 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_260 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_309 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_309 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_35 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_35 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign exitcond4_fu_346_p2 = (j2_reg_262 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond_flatten_fu_334_p2 = (indvar_flatten_reg_240 == ap_const_lv7_40? 1'b1: 1'b0);
assign grp_fu_299_p2 = (lbImage_q0 == ap_const_lv32_0? 1'b1: 1'b0);
assign grp_fu_305_ce = ap_const_logic_1;
assign grp_fu_305_p0 = Image_r_Dout_A;
assign grp_fu_305_p1 = i1_cast9_reg_694;
assign grp_fu_311_ce = ap_const_logic_1;
assign grp_fu_311_p0 = Image_r_Dout_A;
assign grp_fu_311_p1 = j2_cast7_reg_704;
assign i1_cast9_fu_401_p1 = i1_mid2_reg_670;
assign i1_mid2_fu_366_p3 = ((exitcond4_fu_346_p2)? i2_fu_360_p2: i1_reg_251);
assign i2_fu_360_p2 = (i1_reg_251 + ap_const_lv4_1);
assign indvar_flatten_next_fu_340_p2 = (indvar_flatten_reg_240 + ap_const_lv7_1);
assign j2_cast6_fu_386_p1 = j2_mid2_fu_352_p3;
assign j2_cast7_fu_412_p1 = j2_mid2_reg_661;
assign j2_mid2_fu_352_p3 = ((exitcond4_fu_346_p2)? ap_const_lv4_0: j2_reg_262);
assign j_fu_598_p2 = (j2_mid2_reg_661 + ap_const_lv4_1);
assign label_fu_606_p2 = (label_1_fu_66 + ap_const_lv32_1);
assign lbImage_d0 = (label_1_fu_66 + ap_const_lv32_1);
assign lbImage_d1 = temp_4_reg_745;
assign max_fu_531_p3 = ((tmp_19_fu_527_p2)? prevAbove_reg_723: prevLeft_reg_732);
assign or_cond_fu_511_p2 = (tmp_13_fu_501_p2 & tmp_14_fu_506_p2);
assign prevAbove_fu_468_p3 = ((sel_tmp_fu_463_p2)? ap_const_lv32_3E7: lbImage_q0);
assign prevLeft_fu_493_p3 = ((sel_tmp2_fu_487_p2)? ap_const_lv32_3E7: lbImage_q1);
assign sel_tmp2_fu_487_p2 = (tmp_6_fu_476_p2 | tmp_12_fu_481_p2);
assign sel_tmp_fu_463_p2 = (tmp_7_reg_699 | grp_fu_299_p2);
assign setCount_fu_623_p2 = (setCount_1_fu_70 + ap_const_lv32_1);
assign status_address0 = tmp_15_fu_614_p1;
assign status_d0 = ap_const_lv1_1;
assign temp_4_fu_521_p3 = ((tmp_18_fu_517_p2)? prevAbove_reg_723: prevLeft_reg_732);
assign tmp4_cast_fu_420_p1 = $signed(tmp4_fu_415_p2);
assign tmp4_fu_415_p2 = (j2_mid2_reg_661 ^ ap_const_lv4_8);
assign tmp5_cast_fu_444_p1 = $signed(tmp5_fu_439_p2);
assign tmp5_fu_439_p2 = ($signed(j2_mid2_reg_661) + $signed(ap_const_lv4_F));
assign tmp_10_cast_fu_454_p1 = tmp_10_fu_448_p2;
assign tmp_10_fu_448_p2 = ($signed(tmp5_cast_fu_444_p1) + $signed(tmp_cast_fu_404_p1));
assign tmp_11_fu_458_p1 = $unsigned(tmp_10_cast_fu_454_p1);
assign tmp_12_fu_481_p2 = (lbImage_q1 == ap_const_lv32_0? 1'b1: 1'b0);
assign tmp_13_fu_501_p2 = (prevAbove_reg_723 == ap_const_lv32_3E7? 1'b1: 1'b0);
assign tmp_14_fu_506_p2 = (prevLeft_reg_732 == ap_const_lv32_3E7? 1'b1: 1'b0);
assign tmp_15_fu_614_p1 = setCount_1_fu_70;
assign tmp_18_fu_517_p2 = (prevAbove_reg_723 < prevLeft_reg_732? 1'b1: 1'b0);
assign tmp_19_fu_527_p2 = (prevAbove_reg_723 > prevLeft_reg_732? 1'b1: 1'b0);
assign tmp_20_fu_537_p2 = (max_fu_531_p3 == ap_const_lv32_3E7? 1'b1: 1'b0);
assign tmp_22_fu_558_p1 = temp_4_reg_745;
assign tmp_23_fu_554_p1 = max_reg_754;
assign tmp_24_fu_562_p1 = temp_4_reg_745;
assign tmp_25_fu_579_p1 = Image_r_Dout_A;
assign tmp_25_fu_579_p2 = ($signed(totalIntensity_q0) + $signed(tmp_25_fu_579_p1));
assign tmp_27_fu_586_p2 = ($signed(x_r_q0) + $signed(tmp_26_reg_814));
assign tmp_29_fu_592_p2 = ($signed(y_r_q0) + $signed(tmp_28_reg_819));
assign tmp_30_fu_374_p1 = i1_mid2_fu_366_p3[2:0];
assign tmp_3_cast_fu_430_p1 = tmp_3_fu_424_p2;
assign tmp_3_fu_424_p2 = ($signed(tmp4_cast_fu_420_p1) + $signed(tmp_cast_fu_404_p1));
assign tmp_4_fu_434_p1 = $unsigned(tmp_3_cast_fu_430_p1);
assign tmp_6_fu_476_p2 = (j2_mid2_reg_661 == ap_const_lv4_0? 1'b1: 1'b0);
assign tmp_6_i8_fu_573_p2 = (temp_i4_reg_284 == set_q0? 1'b1: 1'b0);
assign tmp_6_i_fu_548_p2 = (temp_i_reg_273 == set_q0? 1'b1: 1'b0);
assign tmp_7_fu_407_p2 = (i1_mid2_reg_670 == ap_const_lv4_0? 1'b1: 1'b0);
assign tmp_9_fu_390_p2 = (j2_cast6_fu_386_p1 + tmp_fu_378_p3);
assign tmp_cast_fu_404_p1 = tmp_reg_677;
assign tmp_fu_378_p3 = {{tmp_30_fu_374_p1}, {ap_const_lv3_0}};
assign tmp_i5_fu_568_p1 = $signed(temp_i4_reg_284);
assign tmp_i_fu_543_p1 = $signed(temp_i_reg_273);
assign tmp_s_fu_396_p1 = tmp_9_fu_390_p2;
always @ (posedge ap_clk)
begin
    tmp_reg_677[2:0] <= 3'b000;
    tmp_s_reg_682[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i1_cast9_reg_694[31:4] <= 28'b0000000000000000000000000000;
    j2_cast7_reg_704[31:4] <= 28'b0000000000000000000000000000;
end



endmodule //CCLabel_firstPass

