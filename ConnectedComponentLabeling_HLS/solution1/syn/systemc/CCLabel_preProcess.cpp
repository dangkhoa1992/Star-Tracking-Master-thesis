// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "CCLabel_preProcess.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic CCLabel_preProcess::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic CCLabel_preProcess::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> CCLabel_preProcess::ap_ST_st1_fsm_0 = "1";
const sc_lv<10> CCLabel_preProcess::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<10> CCLabel_preProcess::ap_ST_pp0_stg1_fsm_2 = "100";
const sc_lv<10> CCLabel_preProcess::ap_ST_pp0_stg2_fsm_3 = "1000";
const sc_lv<10> CCLabel_preProcess::ap_ST_pp0_stg3_fsm_4 = "10000";
const sc_lv<10> CCLabel_preProcess::ap_ST_pp0_stg4_fsm_5 = "100000";
const sc_lv<10> CCLabel_preProcess::ap_ST_pp0_stg5_fsm_6 = "1000000";
const sc_lv<10> CCLabel_preProcess::ap_ST_pp0_stg6_fsm_7 = "10000000";
const sc_lv<10> CCLabel_preProcess::ap_ST_pp0_stg7_fsm_8 = "100000000";
const sc_lv<10> CCLabel_preProcess::ap_ST_st11_fsm_9 = "1000000000";
const sc_lv<32> CCLabel_preProcess::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> CCLabel_preProcess::ap_const_lv1_1 = "1";
const sc_lv<32> CCLabel_preProcess::ap_const_lv32_1 = "1";
const sc_lv<1> CCLabel_preProcess::ap_const_lv1_0 = "0";
const sc_lv<32> CCLabel_preProcess::ap_const_lv32_2 = "10";
const sc_lv<32> CCLabel_preProcess::ap_const_lv32_3 = "11";
const sc_lv<32> CCLabel_preProcess::ap_const_lv32_4 = "100";
const sc_lv<32> CCLabel_preProcess::ap_const_lv32_5 = "101";
const sc_lv<32> CCLabel_preProcess::ap_const_lv32_6 = "110";
const sc_lv<32> CCLabel_preProcess::ap_const_lv32_7 = "111";
const sc_lv<32> CCLabel_preProcess::ap_const_lv32_8 = "1000";
const sc_lv<4> CCLabel_preProcess::ap_const_lv4_0 = "0000";
const sc_lv<32> CCLabel_preProcess::ap_const_lv32_46 = "1000110";
const sc_lv<4> CCLabel_preProcess::ap_const_lv4_8 = "1000";
const sc_lv<4> CCLabel_preProcess::ap_const_lv4_1 = "1";
const sc_lv<3> CCLabel_preProcess::ap_const_lv3_0 = "000";
const sc_lv<6> CCLabel_preProcess::ap_const_lv6_1 = "1";
const sc_lv<6> CCLabel_preProcess::ap_const_lv6_2 = "10";
const sc_lv<6> CCLabel_preProcess::ap_const_lv6_3 = "11";
const sc_lv<6> CCLabel_preProcess::ap_const_lv6_4 = "100";
const sc_lv<6> CCLabel_preProcess::ap_const_lv6_5 = "101";
const sc_lv<6> CCLabel_preProcess::ap_const_lv6_6 = "110";
const sc_lv<6> CCLabel_preProcess::ap_const_lv6_7 = "111";
const sc_lv<32> CCLabel_preProcess::ap_const_lv32_9 = "1001";

CCLabel_preProcess::CCLabel_preProcess(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Image_r_Addr_A);
    sensitive << ( Image_r_Addr_A_orig );

    SC_METHOD(thread_Image_r_Addr_A_orig);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_3_fu_249_p1 );
    sensitive << ( tmp_3_1_fu_259_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( tmp_3_2_fu_269_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( tmp_3_3_fu_279_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( tmp_3_4_fu_289_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( tmp_3_5_fu_299_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( tmp_3_6_fu_309_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( tmp_3_7_fu_319_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );

    SC_METHOD(thread_Image_r_Din_A);

    SC_METHOD(thread_Image_r_EN_A);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );

    SC_METHOD(thread_Image_r_WEN_A);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_9 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_9 );

    SC_METHOD(thread_ap_sig_bdd_106);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_118);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_130);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_142);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_154);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_298);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_94);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_bdd_56 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg1_fsm_2);
    sensitive << ( ap_sig_bdd_81 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg2_fsm_3);
    sensitive << ( ap_sig_bdd_94 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg3_fsm_4);
    sensitive << ( ap_sig_bdd_106 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg4_fsm_5);
    sensitive << ( ap_sig_bdd_118 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg5_fsm_6);
    sensitive << ( ap_sig_bdd_130 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg6_fsm_7);
    sensitive << ( ap_sig_bdd_142 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg7_fsm_8);
    sensitive << ( ap_sig_bdd_154 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_9);
    sensitive << ( ap_sig_bdd_298 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_28 );

    SC_METHOD(thread_exitcond1_fu_225_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( i_phi_fu_202_p4 );

    SC_METHOD(thread_grp_fu_210_p2);
    sensitive << ( Image_r_Dout_A );
    sensitive << ( exitcond1_reg_324 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );

    SC_METHOD(thread_i_1_fu_231_p2);
    sensitive << ( i_phi_fu_202_p4 );

    SC_METHOD(thread_i_phi_fu_202_p4);
    sensitive << ( i_reg_198 );
    sensitive << ( exitcond1_reg_324 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( i_1_reg_328 );

    SC_METHOD(thread_lbImage_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_3_reg_344 );
    sensitive << ( tmp_3_1_reg_354 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( tmp_3_2_reg_364 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( tmp_3_3_reg_374 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( tmp_3_4_reg_384 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( tmp_3_5_reg_394 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( tmp_3_6_reg_404 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( tmp_3_7_reg_414 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );

    SC_METHOD(thread_lbImage_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );

    SC_METHOD(thread_lbImage_d0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( grp_fu_210_p2 );

    SC_METHOD(thread_lbImage_we0);
    sensitive << ( exitcond1_reg_324 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );

    SC_METHOD(thread_tmp_2_1_fu_264_p2);
    sensitive << ( tmp_reg_333 );

    SC_METHOD(thread_tmp_2_2_fu_274_p2);
    sensitive << ( tmp_reg_333 );

    SC_METHOD(thread_tmp_2_3_fu_284_p2);
    sensitive << ( tmp_reg_333 );

    SC_METHOD(thread_tmp_2_4_fu_294_p2);
    sensitive << ( tmp_reg_333 );

    SC_METHOD(thread_tmp_2_5_fu_304_p2);
    sensitive << ( tmp_reg_333 );

    SC_METHOD(thread_tmp_2_6_fu_314_p2);
    sensitive << ( tmp_reg_333 );

    SC_METHOD(thread_tmp_2_s_fu_254_p2);
    sensitive << ( tmp_reg_333 );

    SC_METHOD(thread_tmp_33_fu_237_p1);
    sensitive << ( i_phi_fu_202_p4 );

    SC_METHOD(thread_tmp_3_1_fu_259_p1);
    sensitive << ( tmp_2_s_fu_254_p2 );

    SC_METHOD(thread_tmp_3_2_fu_269_p1);
    sensitive << ( tmp_2_1_fu_264_p2 );

    SC_METHOD(thread_tmp_3_3_fu_279_p1);
    sensitive << ( tmp_2_2_fu_274_p2 );

    SC_METHOD(thread_tmp_3_4_fu_289_p1);
    sensitive << ( tmp_2_3_fu_284_p2 );

    SC_METHOD(thread_tmp_3_5_fu_299_p1);
    sensitive << ( tmp_2_4_fu_294_p2 );

    SC_METHOD(thread_tmp_3_6_fu_309_p1);
    sensitive << ( tmp_2_5_fu_304_p2 );

    SC_METHOD(thread_tmp_3_7_fu_319_p1);
    sensitive << ( tmp_2_6_fu_314_p2 );

    SC_METHOD(thread_tmp_3_fu_249_p1);
    sensitive << ( tmp_fu_241_p3 );

    SC_METHOD(thread_tmp_fu_241_p3);
    sensitive << ( tmp_33_fu_237_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_225_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    ap_CS_fsm = "0000000001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "CCLabel_preProcess_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, Image_r_Addr_A, "(port)Image_r_Addr_A");
    sc_trace(mVcdFile, Image_r_EN_A, "(port)Image_r_EN_A");
    sc_trace(mVcdFile, Image_r_WEN_A, "(port)Image_r_WEN_A");
    sc_trace(mVcdFile, Image_r_Din_A, "(port)Image_r_Din_A");
    sc_trace(mVcdFile, Image_r_Dout_A, "(port)Image_r_Dout_A");
    sc_trace(mVcdFile, lbImage_address0, "(port)lbImage_address0");
    sc_trace(mVcdFile, lbImage_ce0, "(port)lbImage_ce0");
    sc_trace(mVcdFile, lbImage_we0, "(port)lbImage_we0");
    sc_trace(mVcdFile, lbImage_d0, "(port)lbImage_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_28, "ap_sig_bdd_28");
    sc_trace(mVcdFile, i_reg_198, "i_reg_198");
    sc_trace(mVcdFile, exitcond1_fu_225_p2, "exitcond1_fu_225_p2");
    sc_trace(mVcdFile, exitcond1_reg_324, "exitcond1_reg_324");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_56, "ap_sig_bdd_56");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, i_1_fu_231_p2, "i_1_fu_231_p2");
    sc_trace(mVcdFile, i_1_reg_328, "i_1_reg_328");
    sc_trace(mVcdFile, tmp_fu_241_p3, "tmp_fu_241_p3");
    sc_trace(mVcdFile, tmp_reg_333, "tmp_reg_333");
    sc_trace(mVcdFile, tmp_3_fu_249_p1, "tmp_3_fu_249_p1");
    sc_trace(mVcdFile, tmp_3_reg_344, "tmp_3_reg_344");
    sc_trace(mVcdFile, tmp_3_1_fu_259_p1, "tmp_3_1_fu_259_p1");
    sc_trace(mVcdFile, tmp_3_1_reg_354, "tmp_3_1_reg_354");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg1_fsm_2, "ap_sig_cseq_ST_pp0_stg1_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_81, "ap_sig_bdd_81");
    sc_trace(mVcdFile, tmp_3_2_fu_269_p1, "tmp_3_2_fu_269_p1");
    sc_trace(mVcdFile, tmp_3_2_reg_364, "tmp_3_2_reg_364");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg2_fsm_3, "ap_sig_cseq_ST_pp0_stg2_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_94, "ap_sig_bdd_94");
    sc_trace(mVcdFile, tmp_3_3_fu_279_p1, "tmp_3_3_fu_279_p1");
    sc_trace(mVcdFile, tmp_3_3_reg_374, "tmp_3_3_reg_374");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg3_fsm_4, "ap_sig_cseq_ST_pp0_stg3_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_106, "ap_sig_bdd_106");
    sc_trace(mVcdFile, tmp_3_4_fu_289_p1, "tmp_3_4_fu_289_p1");
    sc_trace(mVcdFile, tmp_3_4_reg_384, "tmp_3_4_reg_384");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg4_fsm_5, "ap_sig_cseq_ST_pp0_stg4_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_118, "ap_sig_bdd_118");
    sc_trace(mVcdFile, tmp_3_5_fu_299_p1, "tmp_3_5_fu_299_p1");
    sc_trace(mVcdFile, tmp_3_5_reg_394, "tmp_3_5_reg_394");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg5_fsm_6, "ap_sig_cseq_ST_pp0_stg5_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_130, "ap_sig_bdd_130");
    sc_trace(mVcdFile, tmp_3_6_fu_309_p1, "tmp_3_6_fu_309_p1");
    sc_trace(mVcdFile, tmp_3_6_reg_404, "tmp_3_6_reg_404");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg6_fsm_7, "ap_sig_cseq_ST_pp0_stg6_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_142, "ap_sig_bdd_142");
    sc_trace(mVcdFile, tmp_3_7_fu_319_p1, "tmp_3_7_fu_319_p1");
    sc_trace(mVcdFile, tmp_3_7_reg_414, "tmp_3_7_reg_414");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg7_fsm_8, "ap_sig_cseq_ST_pp0_stg7_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_154, "ap_sig_bdd_154");
    sc_trace(mVcdFile, i_phi_fu_202_p4, "i_phi_fu_202_p4");
    sc_trace(mVcdFile, Image_r_Addr_A_orig, "Image_r_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_210_p2, "grp_fu_210_p2");
    sc_trace(mVcdFile, tmp_33_fu_237_p1, "tmp_33_fu_237_p1");
    sc_trace(mVcdFile, tmp_2_s_fu_254_p2, "tmp_2_s_fu_254_p2");
    sc_trace(mVcdFile, tmp_2_1_fu_264_p2, "tmp_2_1_fu_264_p2");
    sc_trace(mVcdFile, tmp_2_2_fu_274_p2, "tmp_2_2_fu_274_p2");
    sc_trace(mVcdFile, tmp_2_3_fu_284_p2, "tmp_2_3_fu_284_p2");
    sc_trace(mVcdFile, tmp_2_4_fu_294_p2, "tmp_2_4_fu_294_p2");
    sc_trace(mVcdFile, tmp_2_5_fu_304_p2, "tmp_2_5_fu_304_p2");
    sc_trace(mVcdFile, tmp_2_6_fu_314_p2, "tmp_2_6_fu_314_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_9, "ap_sig_cseq_ST_st11_fsm_9");
    sc_trace(mVcdFile, ap_sig_bdd_298, "ap_sig_bdd_298");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

CCLabel_preProcess::~CCLabel_preProcess() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void CCLabel_preProcess::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !esl_seteq<1,1,1>(exitcond1_fu_225_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()) && 
                     !esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0))) {
        i_reg_198 = i_1_reg_328.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_198 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read())) {
        exitcond1_reg_324 = exitcond1_fu_225_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
        i_1_reg_328 = i_1_fu_231_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0))) {
        tmp_3_1_reg_354 = tmp_3_1_fu_259_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read()))) {
        tmp_3_2_reg_364 = tmp_3_2_fu_269_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read()))) {
        tmp_3_3_reg_374 = tmp_3_3_fu_279_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read()))) {
        tmp_3_4_reg_384 = tmp_3_4_fu_289_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read()))) {
        tmp_3_5_reg_394 = tmp_3_5_fu_299_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read()))) {
        tmp_3_6_reg_404 = tmp_3_6_fu_309_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()))) {
        tmp_3_7_reg_414 = tmp_3_7_fu_319_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(exitcond1_fu_225_p2.read(), ap_const_lv1_0))) {
        tmp_3_reg_344 = tmp_3_fu_249_p1.read();
        tmp_reg_333 = tmp_fu_241_p3.read();
    }
}

void CCLabel_preProcess::thread_Image_r_Addr_A() {
    Image_r_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): Image_r_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void CCLabel_preProcess::thread_Image_r_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read())) {
            Image_r_Addr_A_orig =  (sc_lv<32>) (tmp_3_7_fu_319_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read())) {
            Image_r_Addr_A_orig =  (sc_lv<32>) (tmp_3_6_fu_309_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read())) {
            Image_r_Addr_A_orig =  (sc_lv<32>) (tmp_3_5_fu_299_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read())) {
            Image_r_Addr_A_orig =  (sc_lv<32>) (tmp_3_4_fu_289_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read())) {
            Image_r_Addr_A_orig =  (sc_lv<32>) (tmp_3_3_fu_279_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read())) {
            Image_r_Addr_A_orig =  (sc_lv<32>) (tmp_3_2_fu_269_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) {
            Image_r_Addr_A_orig =  (sc_lv<32>) (tmp_3_1_fu_259_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read())) {
            Image_r_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_249_p1.read());
        } else {
            Image_r_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        Image_r_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void CCLabel_preProcess::thread_Image_r_Din_A() {
    Image_r_Din_A = ap_const_lv32_0;
}

void CCLabel_preProcess::thread_Image_r_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read())))) {
        Image_r_EN_A = ap_const_logic_1;
    } else {
        Image_r_EN_A = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_Image_r_WEN_A() {
    Image_r_WEN_A = ap_const_lv4_0;
}

void CCLabel_preProcess::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_9.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_9.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_ap_sig_bdd_106() {
    ap_sig_bdd_106 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void CCLabel_preProcess::thread_ap_sig_bdd_118() {
    ap_sig_bdd_118 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void CCLabel_preProcess::thread_ap_sig_bdd_130() {
    ap_sig_bdd_130 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void CCLabel_preProcess::thread_ap_sig_bdd_142() {
    ap_sig_bdd_142 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void CCLabel_preProcess::thread_ap_sig_bdd_154() {
    ap_sig_bdd_154 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void CCLabel_preProcess::thread_ap_sig_bdd_28() {
    ap_sig_bdd_28 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void CCLabel_preProcess::thread_ap_sig_bdd_298() {
    ap_sig_bdd_298 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void CCLabel_preProcess::thread_ap_sig_bdd_56() {
    ap_sig_bdd_56 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void CCLabel_preProcess::thread_ap_sig_bdd_81() {
    ap_sig_bdd_81 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void CCLabel_preProcess::thread_ap_sig_bdd_94() {
    ap_sig_bdd_94 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void CCLabel_preProcess::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_bdd_56.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_ap_sig_cseq_ST_pp0_stg1_fsm_2() {
    if (ap_sig_bdd_81.read()) {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_ap_sig_cseq_ST_pp0_stg2_fsm_3() {
    if (ap_sig_bdd_94.read()) {
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_ap_sig_cseq_ST_pp0_stg3_fsm_4() {
    if (ap_sig_bdd_106.read()) {
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_ap_sig_cseq_ST_pp0_stg4_fsm_5() {
    if (ap_sig_bdd_118.read()) {
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_ap_sig_cseq_ST_pp0_stg5_fsm_6() {
    if (ap_sig_bdd_130.read()) {
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_ap_sig_cseq_ST_pp0_stg6_fsm_7() {
    if (ap_sig_bdd_142.read()) {
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_ap_sig_cseq_ST_pp0_stg7_fsm_8() {
    if (ap_sig_bdd_154.read()) {
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_ap_sig_cseq_ST_st11_fsm_9() {
    if (ap_sig_bdd_298.read()) {
        ap_sig_cseq_ST_st11_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_9 = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_28.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_exitcond1_fu_225_p2() {
    exitcond1_fu_225_p2 = (!i_phi_fu_202_p4.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_phi_fu_202_p4.read() == ap_const_lv4_8);
}

void CCLabel_preProcess::thread_grp_fu_210_p2() {
    grp_fu_210_p2 = (!Image_r_Dout_A.read().is_01() || !ap_const_lv32_46.is_01())? sc_lv<1>(): (sc_biguint<32>(Image_r_Dout_A.read()) < sc_biguint<32>(ap_const_lv32_46));
}

void CCLabel_preProcess::thread_i_1_fu_231_p2() {
    i_1_fu_231_p2 = (!i_phi_fu_202_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_phi_fu_202_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void CCLabel_preProcess::thread_i_phi_fu_202_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0))) {
        i_phi_fu_202_p4 = i_1_reg_328.read();
    } else {
        i_phi_fu_202_p4 = i_reg_198.read();
    }
}

void CCLabel_preProcess::thread_lbImage_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        lbImage_address0 =  (sc_lv<6>) (tmp_3_7_reg_414.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()))) {
        lbImage_address0 =  (sc_lv<6>) (tmp_3_6_reg_404.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read()))) {
        lbImage_address0 =  (sc_lv<6>) (tmp_3_5_reg_394.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read()))) {
        lbImage_address0 =  (sc_lv<6>) (tmp_3_4_reg_384.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read()))) {
        lbImage_address0 =  (sc_lv<6>) (tmp_3_3_reg_374.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read()))) {
        lbImage_address0 =  (sc_lv<6>) (tmp_3_2_reg_364.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read()))) {
        lbImage_address0 =  (sc_lv<6>) (tmp_3_1_reg_354.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()))) {
        lbImage_address0 =  (sc_lv<6>) (tmp_3_reg_344.read());
    } else {
        lbImage_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void CCLabel_preProcess::thread_lbImage_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read())))) {
        lbImage_ce0 = ap_const_logic_1;
    } else {
        lbImage_ce0 = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_lbImage_d0() {
    lbImage_d0 = (!grp_fu_210_p2.read()[0].is_01())? sc_lv<32>(): ((grp_fu_210_p2.read()[0].to_bool())? ap_const_lv32_0: ap_const_lv32_1);
}

void CCLabel_preProcess::thread_lbImage_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_324.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read())))) {
        lbImage_we0 = ap_const_logic_1;
    } else {
        lbImage_we0 = ap_const_logic_0;
    }
}

void CCLabel_preProcess::thread_tmp_2_1_fu_264_p2() {
    tmp_2_1_fu_264_p2 = (tmp_reg_333.read() | ap_const_lv6_2);
}

void CCLabel_preProcess::thread_tmp_2_2_fu_274_p2() {
    tmp_2_2_fu_274_p2 = (tmp_reg_333.read() | ap_const_lv6_3);
}

void CCLabel_preProcess::thread_tmp_2_3_fu_284_p2() {
    tmp_2_3_fu_284_p2 = (tmp_reg_333.read() | ap_const_lv6_4);
}

void CCLabel_preProcess::thread_tmp_2_4_fu_294_p2() {
    tmp_2_4_fu_294_p2 = (tmp_reg_333.read() | ap_const_lv6_5);
}

void CCLabel_preProcess::thread_tmp_2_5_fu_304_p2() {
    tmp_2_5_fu_304_p2 = (tmp_reg_333.read() | ap_const_lv6_6);
}

void CCLabel_preProcess::thread_tmp_2_6_fu_314_p2() {
    tmp_2_6_fu_314_p2 = (tmp_reg_333.read() | ap_const_lv6_7);
}

void CCLabel_preProcess::thread_tmp_2_s_fu_254_p2() {
    tmp_2_s_fu_254_p2 = (tmp_reg_333.read() | ap_const_lv6_1);
}

void CCLabel_preProcess::thread_tmp_33_fu_237_p1() {
    tmp_33_fu_237_p1 = i_phi_fu_202_p4.read().range(3-1, 0);
}

void CCLabel_preProcess::thread_tmp_3_1_fu_259_p1() {
    tmp_3_1_fu_259_p1 = esl_zext<64,6>(tmp_2_s_fu_254_p2.read());
}

void CCLabel_preProcess::thread_tmp_3_2_fu_269_p1() {
    tmp_3_2_fu_269_p1 = esl_zext<64,6>(tmp_2_1_fu_264_p2.read());
}

void CCLabel_preProcess::thread_tmp_3_3_fu_279_p1() {
    tmp_3_3_fu_279_p1 = esl_zext<64,6>(tmp_2_2_fu_274_p2.read());
}

void CCLabel_preProcess::thread_tmp_3_4_fu_289_p1() {
    tmp_3_4_fu_289_p1 = esl_zext<64,6>(tmp_2_3_fu_284_p2.read());
}

void CCLabel_preProcess::thread_tmp_3_5_fu_299_p1() {
    tmp_3_5_fu_299_p1 = esl_zext<64,6>(tmp_2_4_fu_294_p2.read());
}

void CCLabel_preProcess::thread_tmp_3_6_fu_309_p1() {
    tmp_3_6_fu_309_p1 = esl_zext<64,6>(tmp_2_5_fu_304_p2.read());
}

void CCLabel_preProcess::thread_tmp_3_7_fu_319_p1() {
    tmp_3_7_fu_319_p1 = esl_zext<64,6>(tmp_2_6_fu_314_p2.read());
}

void CCLabel_preProcess::thread_tmp_3_fu_249_p1() {
    tmp_3_fu_249_p1 = esl_zext<64,6>(tmp_fu_241_p3.read());
}

void CCLabel_preProcess::thread_tmp_fu_241_p3() {
    tmp_fu_241_p3 = esl_concat<3,3>(tmp_33_fu_237_p1.read(), ap_const_lv3_0);
}

void CCLabel_preProcess::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !esl_seteq<1,1,1>(exitcond1_fu_225_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st11_fsm_9;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_pp0_stg5_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_pp0_stg6_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

