// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _CCLabel_firstPass_HH_
#define _CCLabel_firstPass_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "CCLabel_mul_32s_4ns_32_3.h"

namespace ap_rtl {

struct CCLabel_firstPass : public sc_module {
    // Port declarations 46
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > Image_r_Addr_A;
    sc_out< sc_logic > Image_r_EN_A;
    sc_out< sc_lv<4> > Image_r_WEN_A;
    sc_out< sc_lv<32> > Image_r_Din_A;
    sc_in< sc_lv<32> > Image_r_Dout_A;
    sc_out< sc_lv<6> > lbImage_address0;
    sc_out< sc_logic > lbImage_ce0;
    sc_out< sc_logic > lbImage_we0;
    sc_out< sc_lv<32> > lbImage_d0;
    sc_in< sc_lv<32> > lbImage_q0;
    sc_out< sc_lv<6> > lbImage_address1;
    sc_out< sc_logic > lbImage_ce1;
    sc_out< sc_logic > lbImage_we1;
    sc_out< sc_lv<32> > lbImage_d1;
    sc_in< sc_lv<32> > lbImage_q1;
    sc_out< sc_lv<6> > set_address0;
    sc_out< sc_logic > set_ce0;
    sc_out< sc_logic > set_we0;
    sc_out< sc_lv<32> > set_d0;
    sc_in< sc_lv<32> > set_q0;
    sc_out< sc_lv<6> > status_address0;
    sc_out< sc_logic > status_ce0;
    sc_out< sc_logic > status_we0;
    sc_out< sc_lv<1> > status_d0;
    sc_out< sc_lv<6> > totalIntensity_address0;
    sc_out< sc_logic > totalIntensity_ce0;
    sc_out< sc_logic > totalIntensity_we0;
    sc_out< sc_lv<32> > totalIntensity_d0;
    sc_in< sc_lv<32> > totalIntensity_q0;
    sc_out< sc_lv<6> > x_r_address0;
    sc_out< sc_logic > x_r_ce0;
    sc_out< sc_logic > x_r_we0;
    sc_out< sc_lv<32> > x_r_d0;
    sc_in< sc_lv<32> > x_r_q0;
    sc_out< sc_lv<6> > y_r_address0;
    sc_out< sc_logic > y_r_ce0;
    sc_out< sc_logic > y_r_we0;
    sc_out< sc_lv<32> > y_r_d0;
    sc_in< sc_lv<32> > y_r_q0;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    CCLabel_firstPass(sc_module_name name);
    SC_HAS_PROCESS(CCLabel_firstPass);

    ~CCLabel_firstPass();

    sc_trace_file* mVcdFile;

    CCLabel_mul_32s_4ns_32_3<1,3,32,4,32>* CCLabel_mul_32s_4ns_32_3_U1;
    CCLabel_mul_32s_4ns_32_3<1,3,32,4,32>* CCLabel_mul_32s_4ns_32_3_U2;
    sc_signal< sc_lv<17> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_35;
    sc_signal< sc_lv<32> > reg_323;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_bdd_106;
    sc_signal< sc_logic > ap_sig_cseq_ST_st15_fsm_14;
    sc_signal< bool > ap_sig_bdd_113;
    sc_signal< sc_lv<7> > indvar_flatten_next_fu_346_p2;
    sc_signal< sc_lv<7> > indvar_flatten_next_reg_662;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_123;
    sc_signal< sc_lv<4> > j2_mid2_fu_358_p3;
    sc_signal< sc_lv<4> > j2_mid2_reg_667;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_340_p2;
    sc_signal< sc_lv<4> > i1_mid2_fu_372_p3;
    sc_signal< sc_lv<4> > i1_mid2_reg_676;
    sc_signal< sc_lv<6> > tmp_fu_384_p3;
    sc_signal< sc_lv<6> > tmp_reg_683;
    sc_signal< sc_lv<64> > tmp_s_fu_402_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_688;
    sc_signal< sc_lv<6> > lbImage_addr_reg_694;
    sc_signal< sc_lv<32> > i1_cast9_fu_407_p1;
    sc_signal< sc_lv<32> > i1_cast9_reg_700;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_146;
    sc_signal< sc_lv<1> > tmp_7_fu_413_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_705;
    sc_signal< sc_lv<32> > j2_cast7_fu_418_p1;
    sc_signal< sc_lv<32> > j2_cast7_reg_710;
    sc_signal< sc_lv<1> > grp_fu_305_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_715;
    sc_signal< sc_lv<32> > max_2_fu_474_p3;
    sc_signal< sc_lv<32> > max_2_reg_729;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_167;
    sc_signal< sc_lv<32> > min_fu_499_p3;
    sc_signal< sc_lv<32> > min_reg_738;
    sc_signal< sc_lv<1> > or_cond_fu_517_p2;
    sc_signal< sc_lv<1> > or_cond_reg_747;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_178;
    sc_signal< sc_lv<32> > temp_4_fu_527_p3;
    sc_signal< sc_lv<32> > temp_4_reg_751;
    sc_signal< sc_lv<32> > max_1_fu_537_p3;
    sc_signal< sc_lv<32> > max_1_reg_760;
    sc_signal< sc_lv<1> > tmp_20_fu_543_p2;
    sc_signal< sc_lv<1> > tmp_20_reg_765;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_199;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_207;
    sc_signal< sc_lv<32> > Image_addr_1_gep_fu_151_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_bdd_216;
    sc_signal< sc_lv<6> > totalIntensity_addr_1_reg_792;
    sc_signal< sc_lv<6> > x_addr_1_reg_797;
    sc_signal< sc_lv<6> > y_addr_1_reg_802;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_bdd_231;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_bdd_239;
    sc_signal< sc_lv<32> > grp_fu_311_p2;
    sc_signal< sc_lv<32> > tmp_26_reg_820;
    sc_signal< sc_logic > ap_sig_cseq_ST_st13_fsm_12;
    sc_signal< bool > ap_sig_bdd_248;
    sc_signal< sc_lv<32> > grp_fu_317_p2;
    sc_signal< sc_lv<32> > tmp_28_reg_825;
    sc_signal< sc_lv<4> > j_fu_604_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st14_fsm_13;
    sc_signal< bool > ap_sig_bdd_259;
    sc_signal< sc_lv<7> > indvar_flatten_reg_246;
    sc_signal< sc_lv<4> > i1_reg_257;
    sc_signal< sc_lv<4> > j2_reg_268;
    sc_signal< sc_lv<32> > temp_i_reg_279;
    sc_signal< sc_lv<1> > tmp_6_i_fu_554_p2;
    sc_signal< sc_lv<32> > temp_i4_reg_290;
    sc_signal< sc_lv<1> > tmp_6_i8_fu_579_p2;
    sc_signal< sc_lv<64> > tmp_4_fu_440_p1;
    sc_signal< sc_lv<64> > tmp_11_fu_464_p1;
    sc_signal< sc_lv<64> > tmp_i_fu_549_p1;
    sc_signal< sc_lv<64> > tmp_23_fu_560_p1;
    sc_signal< sc_lv<64> > tmp_22_fu_564_p1;
    sc_signal< sc_lv<64> > tmp_24_fu_568_p1;
    sc_signal< sc_lv<64> > tmp_i5_fu_574_p1;
    sc_signal< sc_lv<64> > tmp_15_fu_620_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st17_fsm_16;
    sc_signal< bool > ap_sig_bdd_308;
    sc_signal< sc_lv<32> > label_1_fu_72;
    sc_signal< sc_lv<32> > label_fu_612_p2;
    sc_signal< sc_lv<32> > setCount_1_fu_76;
    sc_signal< sc_lv<32> > setCount_fu_629_p2;
    sc_signal< sc_lv<32> > Image_r_Addr_A_orig;
    sc_signal< sc_lv<32> > tmp_25_fu_585_p2;
    sc_signal< sc_lv<32> > tmp_27_fu_592_p2;
    sc_signal< sc_lv<32> > tmp_29_fu_598_p2;
    sc_signal< sc_lv<32> > grp_fu_311_p0;
    sc_signal< sc_lv<4> > grp_fu_311_p1;
    sc_signal< sc_lv<32> > grp_fu_317_p0;
    sc_signal< sc_lv<4> > grp_fu_317_p1;
    sc_signal< sc_lv<1> > exitcond4_fu_352_p2;
    sc_signal< sc_lv<4> > i2_fu_366_p2;
    sc_signal< sc_lv<3> > tmp_32_fu_380_p1;
    sc_signal< sc_lv<6> > j2_cast6_fu_392_p1;
    sc_signal< sc_lv<6> > tmp_9_fu_396_p2;
    sc_signal< sc_lv<4> > tmp4_fu_421_p2;
    sc_signal< sc_lv<7> > tmp4_cast_fu_426_p1;
    sc_signal< sc_lv<7> > tmp_cast_fu_410_p1;
    sc_signal< sc_lv<7> > tmp_3_fu_430_p2;
    sc_signal< sc_lv<32> > tmp_3_cast_fu_436_p1;
    sc_signal< sc_lv<4> > tmp5_fu_445_p2;
    sc_signal< sc_lv<7> > tmp5_cast_fu_450_p1;
    sc_signal< sc_lv<7> > tmp_10_fu_454_p2;
    sc_signal< sc_lv<32> > tmp_10_cast_fu_460_p1;
    sc_signal< sc_lv<1> > sel_tmp_fu_469_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_482_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_487_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_493_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_507_p2;
    sc_signal< sc_lv<1> > tmp_14_fu_512_p2;
    sc_signal< sc_lv<1> > tmp_18_fu_523_p2;
    sc_signal< sc_lv<1> > tmp_19_fu_533_p2;
    sc_signal< sc_lv<32> > tmp_25_fu_585_p1;
    sc_signal< sc_logic > grp_fu_311_ce;
    sc_signal< sc_logic > grp_fu_317_ce;
    sc_signal< sc_lv<17> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<17> ap_ST_st1_fsm_0;
    static const sc_lv<17> ap_ST_st2_fsm_1;
    static const sc_lv<17> ap_ST_st3_fsm_2;
    static const sc_lv<17> ap_ST_st4_fsm_3;
    static const sc_lv<17> ap_ST_st5_fsm_4;
    static const sc_lv<17> ap_ST_st6_fsm_5;
    static const sc_lv<17> ap_ST_st7_fsm_6;
    static const sc_lv<17> ap_ST_st8_fsm_7;
    static const sc_lv<17> ap_ST_st9_fsm_8;
    static const sc_lv<17> ap_ST_st10_fsm_9;
    static const sc_lv<17> ap_ST_st11_fsm_10;
    static const sc_lv<17> ap_ST_st12_fsm_11;
    static const sc_lv<17> ap_ST_st13_fsm_12;
    static const sc_lv<17> ap_ST_st14_fsm_13;
    static const sc_lv<17> ap_ST_st15_fsm_14;
    static const sc_lv<17> ap_ST_st16_fsm_15;
    static const sc_lv<17> ap_ST_st17_fsm_16;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_3E7;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Image_addr_1_gep_fu_151_p3();
    void thread_Image_r_Addr_A();
    void thread_Image_r_Addr_A_orig();
    void thread_Image_r_Din_A();
    void thread_Image_r_EN_A();
    void thread_Image_r_WEN_A();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_106();
    void thread_ap_sig_bdd_113();
    void thread_ap_sig_bdd_123();
    void thread_ap_sig_bdd_146();
    void thread_ap_sig_bdd_167();
    void thread_ap_sig_bdd_178();
    void thread_ap_sig_bdd_199();
    void thread_ap_sig_bdd_207();
    void thread_ap_sig_bdd_216();
    void thread_ap_sig_bdd_231();
    void thread_ap_sig_bdd_239();
    void thread_ap_sig_bdd_248();
    void thread_ap_sig_bdd_259();
    void thread_ap_sig_bdd_308();
    void thread_ap_sig_bdd_35();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st13_fsm_12();
    void thread_ap_sig_cseq_ST_st14_fsm_13();
    void thread_ap_sig_cseq_ST_st15_fsm_14();
    void thread_ap_sig_cseq_ST_st17_fsm_16();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_exitcond4_fu_352_p2();
    void thread_exitcond_flatten_fu_340_p2();
    void thread_grp_fu_305_p2();
    void thread_grp_fu_311_ce();
    void thread_grp_fu_311_p0();
    void thread_grp_fu_311_p1();
    void thread_grp_fu_317_ce();
    void thread_grp_fu_317_p0();
    void thread_grp_fu_317_p1();
    void thread_i1_cast9_fu_407_p1();
    void thread_i1_mid2_fu_372_p3();
    void thread_i2_fu_366_p2();
    void thread_indvar_flatten_next_fu_346_p2();
    void thread_j2_cast6_fu_392_p1();
    void thread_j2_cast7_fu_418_p1();
    void thread_j2_mid2_fu_358_p3();
    void thread_j_fu_604_p2();
    void thread_label_fu_612_p2();
    void thread_lbImage_address0();
    void thread_lbImage_address1();
    void thread_lbImage_ce0();
    void thread_lbImage_ce1();
    void thread_lbImage_d0();
    void thread_lbImage_d1();
    void thread_lbImage_we0();
    void thread_lbImage_we1();
    void thread_max_1_fu_537_p3();
    void thread_max_2_fu_474_p3();
    void thread_min_fu_499_p3();
    void thread_or_cond_fu_517_p2();
    void thread_sel_tmp2_fu_493_p2();
    void thread_sel_tmp_fu_469_p2();
    void thread_setCount_fu_629_p2();
    void thread_set_address0();
    void thread_set_ce0();
    void thread_set_d0();
    void thread_set_we0();
    void thread_status_address0();
    void thread_status_ce0();
    void thread_status_d0();
    void thread_status_we0();
    void thread_temp_4_fu_527_p3();
    void thread_tmp4_cast_fu_426_p1();
    void thread_tmp4_fu_421_p2();
    void thread_tmp5_cast_fu_450_p1();
    void thread_tmp5_fu_445_p2();
    void thread_tmp_10_cast_fu_460_p1();
    void thread_tmp_10_fu_454_p2();
    void thread_tmp_11_fu_464_p1();
    void thread_tmp_12_fu_487_p2();
    void thread_tmp_13_fu_507_p2();
    void thread_tmp_14_fu_512_p2();
    void thread_tmp_15_fu_620_p1();
    void thread_tmp_18_fu_523_p2();
    void thread_tmp_19_fu_533_p2();
    void thread_tmp_20_fu_543_p2();
    void thread_tmp_22_fu_564_p1();
    void thread_tmp_23_fu_560_p1();
    void thread_tmp_24_fu_568_p1();
    void thread_tmp_25_fu_585_p1();
    void thread_tmp_25_fu_585_p2();
    void thread_tmp_27_fu_592_p2();
    void thread_tmp_29_fu_598_p2();
    void thread_tmp_32_fu_380_p1();
    void thread_tmp_3_cast_fu_436_p1();
    void thread_tmp_3_fu_430_p2();
    void thread_tmp_4_fu_440_p1();
    void thread_tmp_6_fu_482_p2();
    void thread_tmp_6_i8_fu_579_p2();
    void thread_tmp_6_i_fu_554_p2();
    void thread_tmp_7_fu_413_p2();
    void thread_tmp_9_fu_396_p2();
    void thread_tmp_cast_fu_410_p1();
    void thread_tmp_fu_384_p3();
    void thread_tmp_i5_fu_574_p1();
    void thread_tmp_i_fu_549_p1();
    void thread_tmp_s_fu_402_p1();
    void thread_totalIntensity_address0();
    void thread_totalIntensity_ce0();
    void thread_totalIntensity_d0();
    void thread_totalIntensity_we0();
    void thread_x_r_address0();
    void thread_x_r_ce0();
    void thread_x_r_d0();
    void thread_x_r_we0();
    void thread_y_r_address0();
    void thread_y_r_ce0();
    void thread_y_r_d0();
    void thread_y_r_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
