

================================================================
== Vivado HLS Report for 'CCLabel_firstPass'
================================================================
* Date:           Tue Feb 28 17:30:22 2017

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        ConnectedComponentLabeling_HLS
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.47|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|    64|    no    |
        | + Loop 1.1  |    ?|    ?|         2|          -|          -|     ?|    no    |
        | + Loop 1.2  |    ?|    ?|         2|          -|          -|     ?|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 15
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond_flatten)
3 --> 
	4  / (!tmp_1)
	12  / (tmp_1)
4 --> 
	5  / true
5 --> 
	13  / (or_cond)
	6  / (!or_cond & !tmp_15)
	8  / (!or_cond & tmp_15)
6 --> 
	7  / true
7 --> 
	6  / (!tmp_15 & !tmp_1_i)
	9  / (!tmp_15 & tmp_1_i) | (tmp_15 & tmp_1_i1)
	8  / (tmp_15 & !tmp_1_i1)
8 --> 
	7  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	2  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	12  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: setCount_1 [1/1] 0.00ns
:0  %setCount_1 = alloca i32, align 4

ST_1: label_1 [1/1] 0.00ns
:1  %label_1 = alloca i32, align 4

ST_1: stg_18 [1/1] 1.57ns
:2  store i32 0, i32* %label_1, align 4

ST_1: stg_19 [1/1] 1.57ns
:3  store i32 1, i32* %setCount_1, align 4

ST_1: stg_20 [1/1] 1.57ns
:4  br label %.preheader


 <State 2>: 7.36ns
ST_2: indvar_flatten [1/1] 0.00ns
.preheader:0  %indvar_flatten = phi i7 [ 0, %0 ], [ %indvar_flatten_next, %._crit_edge ]

ST_2: i [1/1] 0.00ns
.preheader:1  %i = phi i4 [ 0, %0 ], [ %i_mid2, %._crit_edge ]

ST_2: j [1/1] 0.00ns
.preheader:2  %j = phi i4 [ 0, %0 ], [ %j_1, %._crit_edge ]

ST_2: exitcond_flatten [1/1] 1.97ns
.preheader:3  %exitcond_flatten = icmp eq i7 %indvar_flatten, -64

ST_2: indvar_flatten_next [1/1] 1.72ns
.preheader:4  %indvar_flatten_next = add i7 %indvar_flatten, 1

ST_2: stg_26 [1/1] 0.00ns
.preheader:5  br i1 %exitcond_flatten, label %5, label %.preheader.preheader

ST_2: exitcond [1/1] 1.88ns
.preheader.preheader:1  %exitcond = icmp eq i4 %j, -8

ST_2: j_mid2 [1/1] 1.37ns
.preheader.preheader:2  %j_mid2 = select i1 %exitcond, i4 0, i4 %j

ST_2: i_s [1/1] 0.80ns
.preheader.preheader:3  %i_s = add i4 %i, 1

ST_2: i_mid2 [1/1] 1.37ns
.preheader.preheader:4  %i_mid2 = select i1 %exitcond, i4 %i_s, i4 %i

ST_2: j_cast4_cast [1/1] 0.00ns
.preheader.preheader:9  %j_cast4_cast = zext i4 %j_mid2 to i8

ST_2: tmp [1/1] 0.00ns
.preheader.preheader:12  %tmp = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_mid2, i3 0)

ST_2: p_addr_cast [1/1] 0.00ns
.preheader.preheader:14  %p_addr_cast = zext i7 %tmp to i8

ST_2: p_addr1 [1/1] 1.72ns
.preheader.preheader:15  %p_addr1 = add i8 %p_addr_cast, %j_cast4_cast

ST_2: tmp_5 [1/1] 0.00ns
.preheader.preheader:16  %tmp_5 = zext i8 %p_addr1 to i64

ST_2: lbImage_addr [1/1] 0.00ns
.preheader.preheader:17  %lbImage_addr = getelementptr [64 x i32]* %lbImage, i64 0, i64 %tmp_5

ST_2: lbImage_load [2/2] 2.39ns
.preheader.preheader:18  %lbImage_load = load i32* %lbImage_addr, align 4

ST_2: setCount_1_load_1 [1/1] 0.00ns
:0  %setCount_1_load_1 = load i32* %setCount_1, align 4

ST_2: stg_39 [1/1] 0.00ns
:1  ret i32 %setCount_1_load_1


 <State 3>: 4.91ns
ST_3: empty_3 [1/1] 0.00ns
.preheader.preheader:0  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)

ST_3: i_cast5 [1/1] 0.00ns
.preheader.preheader:5  %i_cast5 = zext i4 %i_mid2 to i32

ST_3: tmp_6 [1/1] 1.88ns
.preheader.preheader:6  %tmp_6 = icmp eq i4 %i_mid2, 0

ST_3: tmp_7 [1/1] 0.80ns
.preheader.preheader:7  %tmp_7 = add i4 %i_mid2, -1

ST_3: j_cast4 [1/1] 0.00ns
.preheader.preheader:8  %j_cast4 = zext i4 %j_mid2 to i32

ST_3: tmp_s [1/1] 0.00ns
.preheader.preheader:10  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1)

ST_3: stg_46 [1/1] 0.00ns
.preheader.preheader:11  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_3: p_addr_cast1 [1/1] 0.00ns
.preheader.preheader:13  %p_addr_cast1 = zext i7 %tmp to i9

ST_3: lbImage_load [1/2] 2.39ns
.preheader.preheader:18  %lbImage_load = load i32* %lbImage_addr, align 4

ST_3: tmp_1 [1/1] 2.52ns
.preheader.preheader:19  %tmp_1 = icmp eq i32 %lbImage_load, 0

ST_3: stg_50 [1/1] 0.00ns
.preheader.preheader:20  br i1 %tmp_1, label %._crit_edge, label %_ifconv

ST_3: tmp_8 [1/1] 0.00ns
_ifconv:0  %tmp_8 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %tmp_7, i3 0)

ST_3: p_addr2_cast [1/1] 0.00ns
_ifconv:1  %p_addr2_cast = sext i7 %tmp_8 to i8

ST_3: p_addr3 [1/1] 1.72ns
_ifconv:2  %p_addr3 = add i8 %p_addr2_cast, %j_cast4_cast

ST_3: tmp_16 [1/1] 0.00ns
_ifconv:3  %tmp_16 = sext i8 %p_addr3 to i64

ST_3: lbImage_addr_1 [1/1] 0.00ns
_ifconv:4  %lbImage_addr_1 = getelementptr [64 x i32]* %lbImage, i64 0, i64 %tmp_16

ST_3: lbImage_load_1 [2/2] 2.39ns
_ifconv:5  %lbImage_load_1 = load i32* %lbImage_addr_1, align 4

ST_3: tmp_4 [1/1] 0.80ns
_ifconv:10  %tmp_4 = add i4 %j_mid2, -1

ST_3: tmp_4_cast_cast [1/1] 0.00ns
_ifconv:11  %tmp_4_cast_cast = sext i4 %tmp_4 to i9

ST_3: p_addr8 [1/1] 1.72ns
_ifconv:12  %p_addr8 = add i9 %p_addr_cast1, %tmp_4_cast_cast

ST_3: tmp_25 [1/1] 0.00ns
_ifconv:13  %tmp_25 = sext i9 %p_addr8 to i64

ST_3: lbImage_addr_2 [1/1] 0.00ns
_ifconv:14  %lbImage_addr_2 = getelementptr [64 x i32]* %lbImage, i64 0, i64 %tmp_25

ST_3: lbImage_load_2 [2/2] 2.39ns
_ifconv:15  %lbImage_load_2 = load i32* %lbImage_addr_2, align 4


 <State 4>: 7.65ns
ST_4: lbImage_load_1 [1/2] 2.39ns
_ifconv:5  %lbImage_load_1 = load i32* %lbImage_addr_1, align 4

ST_4: tmp_2 [1/1] 2.52ns
_ifconv:6  %tmp_2 = icmp eq i32 %lbImage_load_1, 0

ST_4: sel_tmp [1/1] 1.37ns
_ifconv:7  %sel_tmp = or i1 %tmp_6, %tmp_2

ST_4: prevAbove [1/1] 1.37ns
_ifconv:8  %prevAbove = select i1 %sel_tmp, i32 999, i32 %lbImage_load_1

ST_4: tmp_3 [1/1] 1.88ns
_ifconv:9  %tmp_3 = icmp eq i4 %j_mid2, 0

ST_4: lbImage_load_2 [1/2] 2.39ns
_ifconv:15  %lbImage_load_2 = load i32* %lbImage_addr_2, align 4

ST_4: tmp_9 [1/1] 2.52ns
_ifconv:16  %tmp_9 = icmp eq i32 %lbImage_load_2, 0

ST_4: sel_tmp2 [1/1] 1.37ns
_ifconv:17  %sel_tmp2 = or i1 %tmp_3, %tmp_9

ST_4: prevLeft [1/1] 1.37ns
_ifconv:18  %prevLeft = select i1 %sel_tmp2, i32 999, i32 %lbImage_load_2


 <State 5>: 7.98ns
ST_5: tmp_10 [1/1] 2.52ns
_ifconv:19  %tmp_10 = icmp eq i32 %prevAbove, 999

ST_5: tmp_11 [1/1] 2.52ns
_ifconv:20  %tmp_11 = icmp eq i32 %prevLeft, 999

ST_5: or_cond [1/1] 1.37ns
_ifconv:21  %or_cond = and i1 %tmp_10, %tmp_11

ST_5: stg_75 [1/1] 0.00ns
_ifconv:22  br i1 %or_cond, label %1, label %2

ST_5: tmp_13 [1/1] 2.52ns
:0  %tmp_13 = icmp ult i32 %prevAbove, %prevLeft

ST_5: temp_4 [1/1] 1.37ns
:1  %temp_4 = select i1 %tmp_13, i32 %prevAbove, i32 %prevLeft

ST_5: tmp_14 [1/1] 2.52ns
:2  %tmp_14 = icmp ugt i32 %prevAbove, %prevLeft

ST_5: max [1/1] 1.37ns
:3  %max = select i1 %tmp_14, i32 %prevAbove, i32 %prevLeft

ST_5: tmp_15 [1/1] 2.52ns
:4  %tmp_15 = icmp eq i32 %max, 999

ST_5: stg_81 [1/1] 1.57ns
:5  br i1 %tmp_15, label %.preheader42, label %.preheader43

ST_5: Image_addr [1/1] 0.00ns
:7  %Image_addr = getelementptr [64 x i32]* %Image_r, i64 0, i64 %tmp_5

ST_5: temp_totalIntensity [2/2] 2.39ns
:8  %temp_totalIntensity = load i32* %Image_addr, align 4


 <State 6>: 2.39ns
ST_6: temp_i [1/1] 0.00ns
.preheader43:0  %temp_i = phi i32 [ %temp_3, %.preheader43 ], [ %temp_4, %2 ]

ST_6: tmp_i [1/1] 0.00ns
.preheader43:1  %tmp_i = zext i32 %temp_i to i64

ST_6: set_addr_4 [1/1] 0.00ns
.preheader43:2  %set_addr_4 = getelementptr [30 x i32]* %set, i64 0, i64 %tmp_i

ST_6: temp_3 [2/2] 2.39ns
.preheader43:3  %temp_3 = load i32* %set_addr_4, align 4


 <State 7>: 4.91ns
ST_7: temp_3 [1/2] 2.39ns
.preheader43:3  %temp_3 = load i32* %set_addr_4, align 4

ST_7: tmp_1_i [1/1] 2.52ns
.preheader43:4  %tmp_1_i = icmp eq i32 %temp_i, %temp_3

ST_7: stg_90 [1/1] 0.00ns
.preheader43:5  br i1 %tmp_1_i, label %find.exit, label %.preheader43

ST_7: tmp_18 [1/1] 0.00ns
find.exit:0  %tmp_18 = zext i32 %max to i64

ST_7: set_addr_2 [1/1] 0.00ns
find.exit:1  %set_addr_2 = getelementptr [30 x i32]* %set, i64 0, i64 %tmp_18

ST_7: stg_93 [1/1] 2.39ns
find.exit:2  store i32 %temp_i, i32* %set_addr_2, align 4

ST_7: stg_94 [1/1] 0.00ns
find.exit:3  br label %3

ST_7: temp [1/2] 2.39ns
.preheader42:3  %temp = load i32* %set_addr_3, align 4

ST_7: tmp_1_i1 [1/1] 2.52ns
.preheader42:4  %tmp_1_i1 = icmp eq i32 %temp_i1, %temp

ST_7: stg_97 [1/1] 0.00ns
.preheader42:5  br i1 %tmp_1_i1, label %find.exit41, label %.preheader42

ST_7: tmp_17 [1/1] 0.00ns
find.exit41:0  %tmp_17 = zext i32 %temp_4 to i64

ST_7: set_addr_1 [1/1] 0.00ns
find.exit41:1  %set_addr_1 = getelementptr [30 x i32]* %set, i64 0, i64 %tmp_17

ST_7: stg_100 [1/1] 2.39ns
find.exit41:2  store i32 %temp_i1, i32* %set_addr_1, align 4

ST_7: stg_101 [1/1] 0.00ns
find.exit41:3  br label %3

ST_7: stg_102 [1/1] 2.39ns
:0  store i32 %temp_4, i32* %lbImage_addr, align 4

ST_7: Image_addr_1 [1/1] 0.00ns
:1  %Image_addr_1 = getelementptr [64 x i32]* %Image_r, i64 0, i64 %tmp_5

ST_7: Image_load [2/2] 2.39ns
:2  %Image_load = load i32* %Image_addr_1, align 4

ST_7: tmp_19 [1/1] 0.00ns
:3  %tmp_19 = zext i32 %temp_4 to i64

ST_7: starData_totalIntensity_addr_3 [1/1] 0.00ns
:4  %starData_totalIntensity_addr_3 = getelementptr [30 x i32]* %starData_totalIntensity, i64 0, i64 %tmp_19

ST_7: starData_totalIntensity_load [2/2] 2.39ns
:5  %starData_totalIntensity_load = load i32* %starData_totalIntensity_addr_3, align 4

ST_7: starData_x_addr [1/1] 0.00ns
:9  %starData_x_addr = getelementptr [30 x i32]* %starData_x, i64 0, i64 %tmp_19

ST_7: starData_y_addr_3 [1/1] 0.00ns
:14  %starData_y_addr_3 = getelementptr [30 x i32]* %starData_y, i64 0, i64 %tmp_19


 <State 8>: 2.39ns
ST_8: temp_i1 [1/1] 0.00ns
.preheader42:0  %temp_i1 = phi i32 [ %temp, %.preheader42 ], [ %temp_4, %2 ]

ST_8: tmp_i1 [1/1] 0.00ns
.preheader42:1  %tmp_i1 = zext i32 %temp_i1 to i64

ST_8: set_addr_3 [1/1] 0.00ns
.preheader42:2  %set_addr_3 = getelementptr [30 x i32]* %set, i64 0, i64 %tmp_i1

ST_8: temp [2/2] 2.39ns
.preheader42:3  %temp = load i32* %set_addr_3, align 4


 <State 9>: 8.47ns
ST_9: Image_load [1/2] 2.39ns
:2  %Image_load = load i32* %Image_addr_1, align 4

ST_9: starData_totalIntensity_load [1/2] 2.39ns
:5  %starData_totalIntensity_load = load i32* %starData_totalIntensity_addr_3, align 4

ST_9: tmp_20 [1/1] 2.44ns
:6  %tmp_20 = add i32 %starData_totalIntensity_load, %Image_load

ST_9: stg_117 [1/1] 2.39ns
:7  store i32 %tmp_20, i32* %starData_totalIntensity_addr_3, align 4

ST_9: tmp_21 [3/3] 6.08ns
:8  %tmp_21 = mul i32 %Image_load, %i_cast5

ST_9: tmp_23 [3/3] 6.08ns
:13  %tmp_23 = mul i32 %Image_load, %j_cast4


 <State 10>: 6.08ns
ST_10: tmp_21 [2/3] 6.08ns
:8  %tmp_21 = mul i32 %Image_load, %i_cast5

ST_10: tmp_23 [2/3] 6.08ns
:13  %tmp_23 = mul i32 %Image_load, %j_cast4


 <State 11>: 6.08ns
ST_11: tmp_21 [1/3] 6.08ns
:8  %tmp_21 = mul i32 %Image_load, %i_cast5

ST_11: starData_x_load [2/2] 2.39ns
:10  %starData_x_load = load i32* %starData_x_addr, align 4

ST_11: tmp_23 [1/3] 6.08ns
:13  %tmp_23 = mul i32 %Image_load, %j_cast4

ST_11: starData_y_load [2/2] 2.39ns
:15  %starData_y_load = load i32* %starData_y_addr_3, align 4


 <State 12>: 7.22ns
ST_12: starData_x_load [1/2] 2.39ns
:10  %starData_x_load = load i32* %starData_x_addr, align 4

ST_12: tmp_22 [1/1] 2.44ns
:11  %tmp_22 = add i32 %starData_x_load, %tmp_21

ST_12: stg_128 [1/1] 2.39ns
:12  store i32 %tmp_22, i32* %starData_x_addr, align 4

ST_12: starData_y_load [1/2] 2.39ns
:15  %starData_y_load = load i32* %starData_y_addr_3, align 4

ST_12: tmp_24 [1/1] 2.44ns
:16  %tmp_24 = add i32 %starData_y_load, %tmp_23

ST_12: stg_131 [1/1] 2.39ns
:17  store i32 %tmp_24, i32* %starData_y_addr_3, align 4

ST_12: stg_132 [1/1] 0.00ns
:18  br label %4

ST_12: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1, i32 %tmp_s)

ST_12: stg_134 [1/1] 0.00ns
:1  br label %._crit_edge

ST_12: j_1 [1/1] 0.80ns
._crit_edge:0  %j_1 = add i4 %j_mid2, 1

ST_12: stg_136 [1/1] 0.00ns
._crit_edge:1  br label %.preheader


 <State 13>: 8.47ns
ST_13: temp_totalIntensity [1/2] 2.39ns
:8  %temp_totalIntensity = load i32* %Image_addr, align 4

ST_13: temp_x [3/3] 6.08ns
:9  %temp_x = mul i32 %temp_totalIntensity, %i_cast5

ST_13: temp_y [3/3] 6.08ns
:10  %temp_y = mul i32 %temp_totalIntensity, %j_cast4


 <State 14>: 6.08ns
ST_14: temp_x [2/3] 6.08ns
:9  %temp_x = mul i32 %temp_totalIntensity, %i_cast5

ST_14: temp_y [2/3] 6.08ns
:10  %temp_y = mul i32 %temp_totalIntensity, %j_cast4


 <State 15>: 8.47ns
ST_15: setCount_1_load [1/1] 0.00ns
:0  %setCount_1_load = load i32* %setCount_1, align 4

ST_15: label_1_load [1/1] 0.00ns
:1  %label_1_load = load i32* %label_1, align 4

ST_15: label [1/1] 2.44ns
:2  %label = add i32 %label_1_load, 1

ST_15: stg_145 [1/1] 2.39ns
:3  store i32 %label, i32* %lbImage_addr, align 4

ST_15: tmp_12 [1/1] 0.00ns
:4  %tmp_12 = zext i32 %setCount_1_load to i64

ST_15: set_addr [1/1] 0.00ns
:5  %set_addr = getelementptr [30 x i32]* %set, i64 0, i64 %tmp_12

ST_15: stg_148 [1/1] 2.39ns
:6  store i32 %label, i32* %set_addr, align 4

ST_15: temp_x [1/3] 6.08ns
:9  %temp_x = mul i32 %temp_totalIntensity, %i_cast5

ST_15: temp_y [1/3] 6.08ns
:10  %temp_y = mul i32 %temp_totalIntensity, %j_cast4

ST_15: starData_status_addr [1/1] 0.00ns
:11  %starData_status_addr = getelementptr [30 x i1]* %starData_status, i64 0, i64 %tmp_12

ST_15: stg_152 [1/1] 2.39ns
:12  store i1 true, i1* %starData_status_addr, align 1

ST_15: starData_totalIntensity_addr [1/1] 0.00ns
:13  %starData_totalIntensity_addr = getelementptr [30 x i32]* %starData_totalIntensity, i64 0, i64 %tmp_12

ST_15: stg_154 [1/1] 2.39ns
:14  store i32 %temp_totalIntensity, i32* %starData_totalIntensity_addr, align 4

ST_15: starData_x_addr21 [1/1] 0.00ns
:15  %starData_x_addr21 = getelementptr [30 x i32]* %starData_x, i64 0, i64 %tmp_12

ST_15: stg_156 [1/1] 2.39ns
:16  store i32 %temp_x, i32* %starData_x_addr21, align 4

ST_15: starData_y_addr [1/1] 0.00ns
:17  %starData_y_addr = getelementptr [30 x i32]* %starData_y, i64 0, i64 %tmp_12

ST_15: stg_158 [1/1] 2.39ns
:18  store i32 %temp_y, i32* %starData_y_addr, align 4

ST_15: setCount [1/1] 2.44ns
:19  %setCount = add i32 %setCount_1_load, 1

ST_15: stg_160 [1/1] 1.57ns
:20  store i32 %label, i32* %label_1, align 4

ST_15: stg_161 [1/1] 1.57ns
:21  store i32 %setCount, i32* %setCount_1, align 4

ST_15: stg_162 [1/1] 0.00ns
:22  br label %4



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
