#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("s_axi_CRTLS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CRTLS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("Image_r_Addr_A", 32, hls_out, 0, "bram", "mem_address", 1),
	Port_Property("Image_r_EN_A", 1, hls_out, 0, "bram", "mem_ce", 1),
	Port_Property("Image_r_WEN_A", 4, hls_out, 0, "bram", "mem_we", 1),
	Port_Property("Image_r_Din_A", 32, hls_out, 0, "bram", "mem_din", 1),
	Port_Property("Image_r_Dout_A", 32, hls_in, 0, "bram", "mem_dout", 1),
	Port_Property("Image_r_Clk_A", 1, hls_out, 0, "bram", "mem_clk", 1),
	Port_Property("Image_r_Rst_A", 1, hls_out, 0, "bram", "mem_rst", 1),
	Port_Property("X_Addr_A", 32, hls_out, 1, "bram", "mem_address", 1),
	Port_Property("X_EN_A", 1, hls_out, 1, "bram", "mem_ce", 1),
	Port_Property("X_WEN_A", 4, hls_out, 1, "bram", "mem_we", 1),
	Port_Property("X_Din_A", 32, hls_out, 1, "bram", "mem_din", 1),
	Port_Property("X_Dout_A", 32, hls_in, 1, "bram", "mem_dout", 1),
	Port_Property("X_Clk_A", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("X_Rst_A", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("Y_Addr_A", 32, hls_out, 2, "bram", "mem_address", 1),
	Port_Property("Y_EN_A", 1, hls_out, 2, "bram", "mem_ce", 1),
	Port_Property("Y_WEN_A", 4, hls_out, 2, "bram", "mem_we", 1),
	Port_Property("Y_Din_A", 32, hls_out, 2, "bram", "mem_din", 1),
	Port_Property("Y_Dout_A", 32, hls_in, 2, "bram", "mem_dout", 1),
	Port_Property("Y_Clk_A", 1, hls_out, 2, "bram", "mem_clk", 1),
	Port_Property("Y_Rst_A", 1, hls_out, 2, "bram", "mem_rst", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "CCLabel";
